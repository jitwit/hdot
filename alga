digraph 
{
  "Algebra.Graph"
  "Algebra.Graph.Acyclic.AdjacencyMap"
  "Algebra.Graph.AdjacencyIntMap"
  "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Algebra.Graph.AdjacencyMap"
  "Algebra.Graph.AdjacencyMap.Algorithm"
  "Algebra.Graph.Bipartite.AdjacencyMap"
  "Algebra.Graph.Class"
  "Algebra.Graph.Export"
  "Algebra.Graph.Export.Dot"
  "Algebra.Graph.HigherKinded.Class"
  "Algebra.Graph.Internal"
  "Algebra.Graph.Label"
  "Algebra.Graph.Labelled"
  "Algebra.Graph.Labelled.AdjacencyMap"
  "Algebra.Graph.Labelled.Example.Automaton"
  "Algebra.Graph.Labelled.Example.Network"
  "Algebra.Graph.NonEmpty"
  "Algebra.Graph.NonEmpty.AdjacencyMap"
  "Algebra.Graph.Relation"
  "Algebra.Graph.Relation.Preorder"
  "Algebra.Graph.Relation.Reflexive"
  "Algebra.Graph.Relation.Symmetric"
  "Algebra.Graph.Relation.Transitive"
  "Algebra.Graph.ToGraph"
  "Algebra.Graph.Undirected"
  "Data.Graph.Typed"
  "Data.Queue"
  "Algebra.Graph" -> "Algebra.Graph.Bipartite.AdjacencyMap"
  "Algebra.Graph" -> "Algebra.Graph.Class"
  "Algebra.Graph" -> "Algebra.Graph.HigherKinded.Class"
  "Algebra.Graph" -> "Algebra.Graph.NonEmpty"
  "Algebra.Graph" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph" -> "Algebra.Graph.Undirected"
  "Algebra.Graph.AdjacencyIntMap" -> "Algebra.Graph"
  "Algebra.Graph.AdjacencyIntMap" -> "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Algebra.Graph.AdjacencyIntMap" -> "Algebra.Graph.Class"
  "Algebra.Graph.AdjacencyIntMap" -> "Algebra.Graph.NonEmpty"
  "Algebra.Graph.AdjacencyIntMap" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.AdjacencyIntMap" -> "Data.Graph.Typed"
  "Algebra.Graph.AdjacencyIntMap.Algorithm" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.Acyclic.AdjacencyMap"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.AdjacencyIntMap"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.Bipartite.AdjacencyMap"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.Class"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.Export"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.Labelled.AdjacencyMap"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.NonEmpty"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.NonEmpty.AdjacencyMap"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.AdjacencyMap" -> "Data.Graph.Typed"
  "Algebra.Graph.AdjacencyMap.Algorithm" -> "Algebra.Graph.Acyclic.AdjacencyMap"
  "Algebra.Graph.AdjacencyMap.Algorithm" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.Class" -> "Algebra.Graph.Relation.Preorder"
  "Algebra.Graph.Class" -> "Algebra.Graph.Relation.Reflexive"
  "Algebra.Graph.Class" -> "Algebra.Graph.Relation.Transitive"
  "Algebra.Graph.Export" -> "Algebra.Graph.Export.Dot"
  "Algebra.Graph.Internal" -> "Algebra.Graph"
  "Algebra.Graph.Internal" -> "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Algebra.Graph.Internal" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Algebra.Graph.Internal" -> "Algebra.Graph.Export"
  "Algebra.Graph.Internal" -> "Algebra.Graph.Label"
  "Algebra.Graph.Internal" -> "Algebra.Graph.Labelled"
  "Algebra.Graph.Internal" -> "Algebra.Graph.NonEmpty"
  "Algebra.Graph.Internal" -> "Algebra.Graph.Relation"
  "Algebra.Graph.Label" -> "Algebra.Graph.Class"
  "Algebra.Graph.Label" -> "Algebra.Graph.Labelled"
  "Algebra.Graph.Label" -> "Algebra.Graph.Labelled.AdjacencyMap"
  "Algebra.Graph.Label" -> "Algebra.Graph.Labelled.Example.Automaton"
  "Algebra.Graph.Labelled" -> "Algebra.Graph.Class"
  "Algebra.Graph.Labelled" -> "Algebra.Graph.Labelled.Example.Automaton"
  "Algebra.Graph.Labelled" -> "Algebra.Graph.Labelled.Example.Network"
  "Algebra.Graph.Labelled" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.Labelled.AdjacencyMap" -> "Algebra.Graph.Class"
  "Algebra.Graph.Labelled.AdjacencyMap" -> "Algebra.Graph.Labelled"
  "Algebra.Graph.Labelled.AdjacencyMap" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.NonEmpty.AdjacencyMap" -> "Algebra.Graph.Acyclic.AdjacencyMap"
  "Algebra.Graph.NonEmpty.AdjacencyMap" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Algebra.Graph.NonEmpty.AdjacencyMap" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.NonEmpty.AdjacencyMap" -> "Data.Graph.Typed"
  "Algebra.Graph.Relation" -> "Algebra.Graph.Class"
  "Algebra.Graph.Relation" -> "Algebra.Graph.Relation.Preorder"
  "Algebra.Graph.Relation" -> "Algebra.Graph.Relation.Reflexive"
  "Algebra.Graph.Relation" -> "Algebra.Graph.Relation.Symmetric"
  "Algebra.Graph.Relation" -> "Algebra.Graph.Relation.Transitive"
  "Algebra.Graph.Relation" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.Relation.Symmetric" -> "Algebra.Graph.Class"
  "Algebra.Graph.Relation.Symmetric" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.Relation.Symmetric" -> "Algebra.Graph.Undirected"
  "Algebra.Graph.ToGraph" -> "Algebra.Graph.Export"
  "Algebra.Graph.ToGraph" -> "Algebra.Graph.Export.Dot"
  "Algebra.Graph.ToGraph" -> "Algebra.Graph.Labelled.Example.Automaton"
  "Algebra.Graph.ToGraph" -> "Algebra.Graph.NonEmpty"
  "Algebra.Graph.ToGraph" -> "Algebra.Graph.Undirected"
  "Algebra.Graph.Undirected" -> "Algebra.Graph.Class"
}
