digraph 
{
  "Algebra.Graph"
  "Algebra.Graph.Acyclic.AdjacencyMap"
  "Algebra.Graph.AdjacencyIntMap"
  "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Algebra.Graph.AdjacencyMap"
  "Algebra.Graph.AdjacencyMap.Algorithm"
  "Algebra.Graph.Bipartite.AdjacencyMap"
  "Algebra.Graph.Class"
  "Algebra.Graph.Export"
  "Algebra.Graph.Export.Dot"
  "Algebra.Graph.HigherKinded.Class"
  "Algebra.Graph.Internal"
  "Algebra.Graph.Label"
  "Algebra.Graph.Labelled"
  "Algebra.Graph.Labelled.AdjacencyMap"
  "Algebra.Graph.Labelled.Example.Automaton"
  "Algebra.Graph.Labelled.Example.Network"
  "Algebra.Graph.NonEmpty"
  "Algebra.Graph.NonEmpty.AdjacencyMap"
  "Algebra.Graph.Relation"
  "Algebra.Graph.Relation.Preorder"
  "Algebra.Graph.Relation.Reflexive"
  "Algebra.Graph.Relation.Symmetric"
  "Algebra.Graph.Relation.Transitive"
  "Algebra.Graph.ToGraph"
  "Algebra.Graph.Undirected"
  "Control.Applicative"
  "Control.DeepSeq"
  "Control.Monad"
  "Control.Monad.Cont"
  "Control.Monad.State"
  "Control.Monad.State.Strict"
  "Control.Monad.Trans.Maybe"
  "Data.Bifunctor"
  "Data.Coerce"
  "Data.Either"
  "Data.Foldable"
  "Data.Graph"
  "Data.Graph.Typed"
  "Data.IntMap"
  "Data.IntMap.Strict"
  "Data.IntSet"
  "Data.List"
  "Data.List.NonEmpty"
  "Data.Map"
  "Data.Map.Strict"
  "Data.Maybe"
  "Data.Monoid"
  "Data.Semigroup"
  "Data.Set"
  "Data.String"
  "Data.Tree"
  "Data.Tuple"
  "GHC.Exts"
  "GHC.Generics"
  "Prelude"
  "Algebra.Graph" -> "Algebra.Graph.Bipartite.AdjacencyMap"
  "Algebra.Graph" -> "Algebra.Graph.Class"
  "Algebra.Graph" -> "Algebra.Graph.HigherKinded.Class"
  "Algebra.Graph" -> "Algebra.Graph.NonEmpty"
  "Algebra.Graph" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph" -> "Algebra.Graph.Undirected"
  "Algebra.Graph.AdjacencyIntMap" -> "Algebra.Graph"
  "Algebra.Graph.AdjacencyIntMap" -> "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Algebra.Graph.AdjacencyIntMap" -> "Algebra.Graph.Class"
  "Algebra.Graph.AdjacencyIntMap" -> "Algebra.Graph.NonEmpty"
  "Algebra.Graph.AdjacencyIntMap" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.AdjacencyIntMap" -> "Data.Graph.Typed"
  "Algebra.Graph.AdjacencyIntMap.Algorithm" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.Acyclic.AdjacencyMap"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.AdjacencyIntMap"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.Bipartite.AdjacencyMap"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.Class"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.Export"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.Labelled.AdjacencyMap"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.NonEmpty"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.NonEmpty.AdjacencyMap"
  "Algebra.Graph.AdjacencyMap" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.AdjacencyMap" -> "Data.Graph.Typed"
  "Algebra.Graph.AdjacencyMap.Algorithm" -> "Algebra.Graph.Acyclic.AdjacencyMap"
  "Algebra.Graph.AdjacencyMap.Algorithm" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.Class" -> "Algebra.Graph.Relation.Preorder"
  "Algebra.Graph.Class" -> "Algebra.Graph.Relation.Reflexive"
  "Algebra.Graph.Class" -> "Algebra.Graph.Relation.Transitive"
  "Algebra.Graph.Export" -> "Algebra.Graph.Export.Dot"
  "Algebra.Graph.Internal" -> "Algebra.Graph"
  "Algebra.Graph.Internal" -> "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Algebra.Graph.Internal" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Algebra.Graph.Internal" -> "Algebra.Graph.Export"
  "Algebra.Graph.Internal" -> "Algebra.Graph.Label"
  "Algebra.Graph.Internal" -> "Algebra.Graph.Labelled"
  "Algebra.Graph.Internal" -> "Algebra.Graph.NonEmpty"
  "Algebra.Graph.Internal" -> "Algebra.Graph.Relation"
  "Algebra.Graph.Label" -> "Algebra.Graph.Class"
  "Algebra.Graph.Label" -> "Algebra.Graph.Labelled"
  "Algebra.Graph.Label" -> "Algebra.Graph.Labelled.AdjacencyMap"
  "Algebra.Graph.Label" -> "Algebra.Graph.Labelled.Example.Automaton"
  "Algebra.Graph.Labelled" -> "Algebra.Graph.Class"
  "Algebra.Graph.Labelled" -> "Algebra.Graph.Labelled.Example.Automaton"
  "Algebra.Graph.Labelled" -> "Algebra.Graph.Labelled.Example.Network"
  "Algebra.Graph.Labelled" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.Labelled.AdjacencyMap" -> "Algebra.Graph.Class"
  "Algebra.Graph.Labelled.AdjacencyMap" -> "Algebra.Graph.Labelled"
  "Algebra.Graph.Labelled.AdjacencyMap" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.NonEmpty.AdjacencyMap" -> "Algebra.Graph.Acyclic.AdjacencyMap"
  "Algebra.Graph.NonEmpty.AdjacencyMap" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Algebra.Graph.NonEmpty.AdjacencyMap" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.NonEmpty.AdjacencyMap" -> "Data.Graph.Typed"
  "Algebra.Graph.Relation" -> "Algebra.Graph.Class"
  "Algebra.Graph.Relation" -> "Algebra.Graph.Relation.Preorder"
  "Algebra.Graph.Relation" -> "Algebra.Graph.Relation.Reflexive"
  "Algebra.Graph.Relation" -> "Algebra.Graph.Relation.Symmetric"
  "Algebra.Graph.Relation" -> "Algebra.Graph.Relation.Transitive"
  "Algebra.Graph.Relation" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.Relation.Symmetric" -> "Algebra.Graph.Class"
  "Algebra.Graph.Relation.Symmetric" -> "Algebra.Graph.ToGraph"
  "Algebra.Graph.Relation.Symmetric" -> "Algebra.Graph.Undirected"
  "Algebra.Graph.ToGraph" -> "Algebra.Graph.Export"
  "Algebra.Graph.ToGraph" -> "Algebra.Graph.Export.Dot"
  "Algebra.Graph.ToGraph" -> "Algebra.Graph.Labelled.Example.Automaton"
  "Algebra.Graph.ToGraph" -> "Algebra.Graph.NonEmpty"
  "Algebra.Graph.ToGraph" -> "Algebra.Graph.Undirected"
  "Algebra.Graph.Undirected" -> "Algebra.Graph.Class"
  "Control.Applicative" -> "Algebra.Graph"
  "Control.Applicative" -> "Algebra.Graph.HigherKinded.Class"
  "Control.Applicative" -> "Algebra.Graph.Label"
  "Control.Applicative" -> "Algebra.Graph.Undirected"
  "Control.DeepSeq" -> "Algebra.Graph"
  "Control.DeepSeq" -> "Algebra.Graph.AdjacencyIntMap"
  "Control.DeepSeq" -> "Algebra.Graph.AdjacencyMap"
  "Control.DeepSeq" -> "Algebra.Graph.Labelled"
  "Control.DeepSeq" -> "Algebra.Graph.Labelled.AdjacencyMap"
  "Control.DeepSeq" -> "Algebra.Graph.NonEmpty"
  "Control.DeepSeq" -> "Algebra.Graph.NonEmpty.AdjacencyMap"
  "Control.DeepSeq" -> "Algebra.Graph.Relation"
  "Control.DeepSeq" -> "Algebra.Graph.Relation.Preorder"
  "Control.DeepSeq" -> "Algebra.Graph.Relation.Reflexive"
  "Control.DeepSeq" -> "Algebra.Graph.Relation.Symmetric"
  "Control.DeepSeq" -> "Algebra.Graph.Relation.Transitive"
  "Control.DeepSeq" -> "Algebra.Graph.Undirected"
  "Control.Monad" -> "Algebra.Graph"
  "Control.Monad" -> "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Control.Monad" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Control.Monad" -> "Algebra.Graph.Bipartite.AdjacencyMap"
  "Control.Monad" -> "Algebra.Graph.HigherKinded.Class"
  "Control.Monad" -> "Algebra.Graph.Label"
  "Control.Monad" -> "Algebra.Graph.Undirected"
  "Control.Monad.Cont" -> "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Control.Monad.Cont" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Control.Monad.State" -> "Algebra.Graph"
  "Control.Monad.State" -> "Algebra.Graph.Bipartite.AdjacencyMap"
  "Control.Monad.State" -> "Algebra.Graph.NonEmpty"
  "Control.Monad.State.Strict" -> "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Control.Monad.State.Strict" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Control.Monad.Trans.Maybe" -> "Algebra.Graph.Bipartite.AdjacencyMap"
  "Data.Bifunctor" -> "Algebra.Graph.Labelled"
  "Data.Coerce" -> "Algebra.Graph.Acyclic.AdjacencyMap"
  "Data.Coerce" -> "Algebra.Graph.Label"
  "Data.Coerce" -> "Algebra.Graph.NonEmpty.AdjacencyMap"
  "Data.Coerce" -> "Algebra.Graph.Relation.Symmetric"
  "Data.Coerce" -> "Algebra.Graph.Undirected"
  "Data.Either" -> "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Data.Either" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Data.Either" -> "Algebra.Graph.Bipartite.AdjacencyMap"
  "Data.Foldable" -> "Algebra.Graph"
  "Data.Foldable" -> "Algebra.Graph.Bipartite.AdjacencyMap"
  "Data.Foldable" -> "Algebra.Graph.Export"
  "Data.Foldable" -> "Algebra.Graph.Internal"
  "Data.Foldable" -> "Data.Graph.Typed"
  "Data.Graph" -> "Algebra.Graph"
  "Data.Graph" -> "Algebra.Graph.NonEmpty"
  "Data.Graph" -> "Data.Graph.Typed"
  "Data.IntMap" -> "Algebra.Graph.ToGraph"
  "Data.IntMap.Strict" -> "Algebra.Graph.AdjacencyIntMap"
  "Data.IntMap.Strict" -> "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Data.IntMap.Strict" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Data.IntSet" -> "Algebra.Graph"
  "Data.IntSet" -> "Algebra.Graph.AdjacencyIntMap"
  "Data.IntSet" -> "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Data.IntSet" -> "Algebra.Graph.NonEmpty"
  "Data.IntSet" -> "Algebra.Graph.ToGraph"
  "Data.IntSet" -> "Algebra.Graph.Undirected"
  "Data.List" -> "Algebra.Graph.AdjacencyIntMap"
  "Data.List" -> "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Data.List" -> "Algebra.Graph.AdjacencyMap"
  "Data.List" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Data.List" -> "Algebra.Graph.Bipartite.AdjacencyMap"
  "Data.List" -> "Algebra.Graph.Export.Dot"
  "Data.List" -> "Algebra.Graph.NonEmpty.AdjacencyMap"
  "Data.List" -> "Algebra.Graph.Undirected"
  "Data.List.NonEmpty" -> "Algebra.Graph.Acyclic.AdjacencyMap"
  "Data.List.NonEmpty" -> "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Data.List.NonEmpty" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Data.List.NonEmpty" -> "Algebra.Graph.NonEmpty"
  "Data.List.NonEmpty" -> "Algebra.Graph.NonEmpty.AdjacencyMap"
  "Data.Map" -> "Algebra.Graph.Acyclic.AdjacencyMap"
  "Data.Map" -> "Algebra.Graph.Labelled"
  "Data.Map" -> "Algebra.Graph.Labelled.AdjacencyMap"
  "Data.Map" -> "Algebra.Graph.Labelled.Example.Automaton"
  "Data.Map" -> "Algebra.Graph.ToGraph"
  "Data.Map.Strict" -> "Algebra.Graph.AdjacencyIntMap"
  "Data.Map.Strict" -> "Algebra.Graph.AdjacencyMap"
  "Data.Map.Strict" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Data.Map.Strict" -> "Algebra.Graph.Bipartite.AdjacencyMap"
  "Data.Map.Strict" -> "Algebra.Graph.Labelled.AdjacencyMap"
  "Data.Map.Strict" -> "Data.Graph.Typed"
  "Data.Maybe" -> "Algebra.Graph"
  "Data.Maybe" -> "Algebra.Graph.AdjacencyMap"
  "Data.Maybe" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Data.Maybe" -> "Algebra.Graph.Bipartite.AdjacencyMap"
  "Data.Maybe" -> "Algebra.Graph.Label"
  "Data.Maybe" -> "Algebra.Graph.Labelled.AdjacencyMap"
  "Data.Maybe" -> "Algebra.Graph.NonEmpty.AdjacencyMap"
  "Data.Maybe" -> "Algebra.Graph.Relation"
  "Data.Maybe" -> "Data.Graph.Typed"
  "Data.Monoid" -> "Algebra.Graph.AdjacencyIntMap"
  "Data.Monoid" -> "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Data.Monoid" -> "Algebra.Graph.AdjacencyMap"
  "Data.Monoid" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Data.Monoid" -> "Algebra.Graph.Export.Dot"
  "Data.Monoid" -> "Algebra.Graph.Label"
  "Data.Monoid" -> "Algebra.Graph.Labelled"
  "Data.Monoid" -> "Algebra.Graph.Labelled.AdjacencyMap"
  "Data.Monoid" -> "Algebra.Graph.Labelled.Example.Automaton"
  "Data.Semigroup" -> "Algebra.Graph"
  "Data.Semigroup" -> "Algebra.Graph.Export"
  "Data.Semigroup" -> "Algebra.Graph.Internal"
  "Data.Semigroup" -> "Algebra.Graph.Label"
  "Data.Semigroup" -> "Algebra.Graph.NonEmpty"
  "Data.Set" -> "Algebra.Graph"
  "Data.Set" -> "Algebra.Graph.Acyclic.AdjacencyMap"
  "Data.Set" -> "Algebra.Graph.AdjacencyIntMap"
  "Data.Set" -> "Algebra.Graph.AdjacencyMap"
  "Data.Set" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Data.Set" -> "Algebra.Graph.Bipartite.AdjacencyMap"
  "Data.Set" -> "Algebra.Graph.Internal"
  "Data.Set" -> "Algebra.Graph.Label"
  "Data.Set" -> "Algebra.Graph.Labelled"
  "Data.Set" -> "Algebra.Graph.Labelled.AdjacencyMap"
  "Data.Set" -> "Algebra.Graph.NonEmpty"
  "Data.Set" -> "Algebra.Graph.NonEmpty.AdjacencyMap"
  "Data.Set" -> "Algebra.Graph.Relation"
  "Data.Set" -> "Algebra.Graph.Relation.Symmetric"
  "Data.Set" -> "Algebra.Graph.ToGraph"
  "Data.Set" -> "Algebra.Graph.Undirected"
  "Data.Set" -> "Data.Graph.Typed"
  "Data.String" -> "Algebra.Graph.Export"
  "Data.String" -> "Algebra.Graph.Export.Dot"
  "Data.Tree" -> "Algebra.Graph"
  "Data.Tree" -> "Algebra.Graph.AdjacencyIntMap"
  "Data.Tree" -> "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "Data.Tree" -> "Algebra.Graph.AdjacencyMap"
  "Data.Tree" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "Data.Tree" -> "Algebra.Graph.Class"
  "Data.Tree" -> "Algebra.Graph.HigherKinded.Class"
  "Data.Tree" -> "Algebra.Graph.NonEmpty"
  "Data.Tree" -> "Algebra.Graph.NonEmpty.AdjacencyMap"
  "Data.Tree" -> "Algebra.Graph.Relation"
  "Data.Tree" -> "Algebra.Graph.Relation.Symmetric"
  "Data.Tree" -> "Algebra.Graph.ToGraph"
  "Data.Tree" -> "Algebra.Graph.Undirected"
  "Data.Tree" -> "Data.Graph.Typed"
  "Data.Tuple" -> "Algebra.Graph.Bipartite.AdjacencyMap"
  "Data.Tuple" -> "Algebra.Graph.Relation"
  "GHC.Exts" -> "Algebra.Graph"
  "GHC.Exts" -> "Algebra.Graph.AdjacencyIntMap.Algorithm"
  "GHC.Exts" -> "Algebra.Graph.AdjacencyMap.Algorithm"
  "GHC.Exts" -> "Algebra.Graph.Internal"
  "GHC.Exts" -> "Algebra.Graph.Label"
  "GHC.Exts" -> "Algebra.Graph.Labelled"
  "GHC.Exts" -> "Algebra.Graph.NonEmpty"
  "GHC.Generics" -> "Algebra.Graph"
  "GHC.Generics" -> "Algebra.Graph.AdjacencyIntMap"
  "GHC.Generics" -> "Algebra.Graph.AdjacencyMap"
  "GHC.Generics" -> "Algebra.Graph.Bipartite.AdjacencyMap"
  "GHC.Generics" -> "Algebra.Graph.Labelled"
  "GHC.Generics" -> "Algebra.Graph.Labelled.AdjacencyMap"
  "GHC.Generics" -> "Algebra.Graph.NonEmpty.AdjacencyMap"
  "GHC.Generics" -> "Algebra.Graph.Undirected"
  "Prelude" -> "Algebra.Graph.Export"
  "Prelude" -> "Algebra.Graph.Export.Dot"
  "Prelude" -> "Algebra.Graph.NonEmpty.AdjacencyMap"
}
